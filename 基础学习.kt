https://mp.weixin.qq.com/s/koQnBFIvD1MAezHorkxXlg

讲讲你看的Android源码
https://zhuanlan.zhihu.com/p/20564614

观察者模式又被称作发布/订阅模式，观察者模式定义了一种一对多的依赖关系，让多个观察者对象同时监听某一个主题对象。这个主题对象在状态发生变化时，会通知所有观察者对象，使它们能够自动更新自己。
EventBus 
https://blog.csdn.net/u012124438/article/details/55294914

什么是线程安全和线程不安全
https://blog.csdn.net/Mrzhoug/article/details/51197670
首先要明白线程的工作原理，jvm有一个main memory，而每个线程有自己的working memory，一个线程对一个variable进行操作时，都要在自己的working memory里面建立一个copy，操作完之后再写入main memory。多个线程同时操作同一个variable，就可能会出现不可预知的结果。
线程安全就是说多线程访问同一代码，不会产生不确定的结果。

JVM内存模型
JVM = 类加载器(classloader) + 执行引擎(execution engine) + 运行时数据区域(runtime data area) 
程序计数器 线程私有，它的生命周期与线程相同。
Java虚拟机栈 线程私有的，它的生命周期与线程相同。
本地方法栈 
Java堆（Heap） 被所有线程共享，在虚拟机启动时创建，用来存放对象实例，几乎所有的对象实例都在这里分配内存。
方法区（Method Area）

GC回收算法
Java技术体系中所提倡的 自动内存管理 最终可以归结为自动化地解决了两个问题：给对象分配内存 以及 回收分配给对象的内存，而且这两个问题针对的内存区域就是Java内存模型中的 堆区。
任何引用计数为0的对象实例可以被当作垃圾收集。
可达性分析算法是通过判断对象的引用链是否可达来决定对象是否可以被回收。
标记清除算法
Minor GC
Full GC
Serial收集器（复制算法): 新生代单线程收集器，标记和清理都是单线程，优点是简单高效；

我对简历的理解是，对自己的基本情况做总结形成你的人设，目的是让用人单位对你感兴趣，获得面试邀约。简历格式用PDF，两页最好，如果你觉得你足够屌，可以一页。注意排版要整洁，自我认知要客观，别什么精通xxx张口就来，除非你是真的精通，已经完全不怕被面试官问倒的程度，反正我一个精通没写。对于什么教育程度、自我评价、专业技能点、工作项目经历之类的用什么顺序写之类的，我觉得没有一个固定的标准，我的建议就是以突出自身亮点、优势，扬长避短为原则的优先级排序。比如你是985的学校毕业的，但是工作履历不出彩，可以把学校放前面，我因为专业不是计算机类的，为了防止被HR刷掉，我只写了xx大学，本科，事实上一般技术面试官也不是那么看重专业出身的，就我经历的几个厂面试而言，我在自我介绍时主动说明了我的专业出身，面试官一般也会表示理解。那如果，学历不够出彩，但是之前公司背景屌或者说做过的项目比较知名比较屌，例如用户量、日活很多之类的，那么就可以把项目经历写在比较靠前醒目的位置。如果自己有写高质量博客的好习惯，或者在GayHub上有star比较多的开源项目，可以写在自我评价里，作为加分项，因为本人这两者都没有，所以我自己没写自我评价。
熟悉常用的数据结构与算法，肯定比熟练运用HashMap、ArrayList，知道快速排序原理要强。项目经历怎么写？那还就是用著名的star法则，即情境(situation)、任务(task)、行动(action)、结果(result)。在什么场景下，采用了什么技术方案，取得了什么成果，通俗来讲，还是提取项目中的技术亮点和能体现你能力的地方。比如说，对应用启动的做了xx优化，启动速度快了30%，比竞品厉害了多少。

Https的原理
https://www.jianshu.com/p/650ad90bf563
啥是HTTPS? 说白了就是HTTP Over SSL。
如果我们需要在网页上输入一些敏感信息，如我们的银行卡账号和密码，发送给服务器，就会在中间节点中存在泄漏的风险。HTTPS就是为了保障传输过程中的安全目的而生的。HTTPS保证了数据仅仅只在发送方和目的方双方可见，而对中间任一一个节点都不可见。
HTTPS工作在客户端和服务器端之间。
客户端首先会将自己支持的加密算法，打个包告诉服务器端。
服务器端从客户端发来的加密算法中，选出一组加密算法和HASH算法（注，HASH也属于加密），并将自己的身份信息以证书的形式发回给客户端。而证书中包含了网站的地址，加密用的公钥，以及证书的颁发机构等；
服务器就将自己用来加密用的公钥一同发还给客户端，而私钥则服务器保存着，用户解密客户端加密过后的内容。
详情见网址内容
非对称加密算法：RSA, DSA/DSS
对称加密算法： AES, 3DES
HASH算法：MD5, SHA1, SHA256
